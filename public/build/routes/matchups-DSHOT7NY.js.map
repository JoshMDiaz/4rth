{
  "version": 3,
  "sources": ["../../../app/routes/matchups.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/matchups.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/matchups.tsx\");\n  import.meta.hot.lastModified = \"1693093840866.7637\";\n}\n// REMIX HMR END\n\nimport React, { useEffect, useState } from 'react';\nimport { Button } from '@mui/material';\nconst Matchups = () => {\n  _s();\n  const [matchups, setMatchups] = useState([]);\n  const [teamPoints, setTeamPoints] = useState({});\n  useEffect(() => {\n    const savedMatchups = localStorage.getItem('matchups');\n    if (savedMatchups) {\n      setMatchups(JSON.parse(savedMatchups));\n    }\n  }, []);\n  const handleScoreChange = ({\n    roundIndex,\n    matchupIndex,\n    team,\n    score\n  }) => {\n    const players = matchups[roundIndex][matchupIndex][team];\n    setTeamPoints(prevState => ({\n      ...prevState,\n      [`round${roundIndex + 1}`]: {\n        ...prevState[`round${roundIndex + 1}`],\n        [`matchup${matchupIndex + 1}`]: {\n          ...prevState[`round${roundIndex + 1}`]?.[`matchup${matchupIndex + 1}`],\n          [players[0]?.name ?? '']: score,\n          [players[1]?.name ?? '']: score\n        }\n      }\n    }));\n  };\n  const handleScoreSubmit = ({\n    roundIndex,\n    matchupIndex\n  }) => {\n    function findWinners(matchupData) {\n      const maxScore = Math.max(...Object.values(matchupData));\n      return Object.keys(matchupData).filter(player => matchupData[player] === maxScore);\n    }\n    const matchupData = teamPoints[`round${roundIndex + 1}`][`matchup${matchupIndex + 1}`];\n    const matchupWinners = findWinners(matchupData);\n    function updateWins(playerNames) {\n      const playersData = JSON.parse(localStorage.getItem('players') ?? '') || [];\n      for (const player of playersData) {\n        if (playerNames.includes(player.name)) {\n          player.wins += 1;\n        }\n      }\n      localStorage.setItem('players', JSON.stringify(playersData));\n    }\n    updateWins(matchupWinners);\n  };\n  const renderMatchup = (matchup, roundIndex, matchupIndex) => {\n    const team1Players = matchup.team1.map(player => player ? player.name : 'TBD').join(' / '),\n      team2Players = matchup.team2.map(player => player ? player.name : 'TBD').join(' / '),\n      roundMatchup = teamPoints?.[`round${roundIndex + 1}`]?.[`matchup${matchupIndex + 1}`];\n    function areAllValuesNumbers(obj) {\n      if (typeof obj !== 'object' || obj === null) {\n        return false;\n      }\n      return Object.values(obj).every(value => typeof value === 'number' && !isNaN(value));\n    }\n    return <div key={matchupIndex}>\n        <h3>Matchup {matchupIndex + 1}</h3>\n        <div>\n          Team 1: {team1Players}{' '}\n          <input type=\"number\" min={0} onChange={e => {\n          handleScoreChange({\n            roundIndex,\n            matchupIndex,\n            team: 'team1',\n            score: parseInt(e.target.value)\n          });\n        }} />\n        </div>\n        <div>\n          Team 2: {team2Players}{' '}\n          <input type=\"number\" min={0} onChange={e => {\n          handleScoreChange({\n            roundIndex,\n            matchupIndex,\n            team: 'team2',\n            score: parseInt(e.target.value)\n          });\n        }} />\n        </div>\n        <Button variant=\"contained\" color=\"primary\" disabled={!roundMatchup || roundMatchup && Object.keys(roundMatchup).length < 4 || !areAllValuesNumbers(roundMatchup)} onClick={e => handleScoreSubmit({\n        roundIndex,\n        matchupIndex\n      })}>\n          Submit Scores\n        </Button>\n      </div>;\n  };\n  return <div>\n      <h1>Matchups</h1>\n      {matchups.map((round, roundIndex) => <div key={roundIndex}>\n          <h2>Round {roundIndex + 1}</h2>\n          {round.map((matchup, matchupIndex) => renderMatchup(matchup, roundIndex, matchupIndex))}\n        </div>)}\n    </div>;\n};\n_s(Matchups, \"uEWzX1/IqqBVnUgQh/FmfeT97DI=\");\n_c = Matchups;\nexport default Matchups;\nvar _c;\n$RefreshReg$(_c, \"Matchups\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["_c", "matchupData"]
}
